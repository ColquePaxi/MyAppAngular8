
// Criar projeto
ng new myapp

// Subir o servidor
ng serve

// Criar componente via ng
ng generate component MySecond
ou
ng g c MySecond

// Criar componente dentro de componente (aninhados) - tile dentro de list, por exemplo.
ng g c my-second/MyThird


-------------------------
OUTRO PROJETO

https://material.angular.io/

// Adicionando o Angula Material
$ ng add @angular/material

// Ícones com nomes
https://fonts.google.com/icons

// Gravar no package.json o pacote que vc tá instalando
// Assim vc sobe o projeto pro Git e outro dev fica com os mesmos pacotes que foram usados no projeto
$ npm install --save << nome do pacote >>
$ npm install --save faker   // Exemplo

// Depois que rodar o comando abaixo, será recriada a pasta node_modules na pasta do projeto
$ npm i // dentro da pasta do projeto  //  Ele pegará o que está no package.json e vai instalar

-------------------------------
DATA BINDING - Seção 3 - 

14. Interpolação de String (como pegar dados do type script e mostrar no html)

Procedimento para guardar no mesmo github privado chamado https://github.com/ColquePaxi/MyAppAngular8:
- Apaga tudo (EXCETO os arquivos .git e Treinamento.TXT) que tem na pasta: C:\Projetos\angular78\myapp
- Cria o projeto da seção que será estudada - EM UMA PASTA QUALQUER FORA DO PROJETO PADRÃO:
  Exemplo: C:\Temp\angular
  $ ng new data-binding-app
- Copia todos os arquivos (exceto o .git) para a pasta C:\Projetos\angular78\myapp

Adiciona o Angula Material
$ ng add @angular/material

Criar um componenete chamando StringInterpolation (use CamalCase para criar o arquivo como string-interpolation)
$ ng g c StringInterpolation

Vamos em https://material.angular.io/components/card/examples
para implementar os dados de cards pegando de objetos locais que criamos:

No src/app.module.ts tem que adicionar MatCardModule (veja descrito em API)
import { MatCardModule } from '@angular/material/card';

No src/app.module.ts tem que adicionar MatButtonModule (veja descrito em API)
import { MatButtonModule } from '@angular/material/button';

No src/app.module.ts tem que adicionar MatInputModule (veja descrito em API)
import { MatInputModule } from '@angular/material/button';


-------------------------------
PROPERTY BINDING - Seção 3 - 

15. Criar uma propriedade (atributo de um componente associado a uma variável que esteja declarada dentro de nossa class) no TS para interagir com o HTML. Portanto, muito usado para fins dinâmicos.

-------------------------------
EVENT BINDING - Seção 3 - 

16. Interação entrew TS e HTML via evento. Usamos botaões e cliques.

-------------------------------
EVENT BINDING COM PARÂMETROS - Seção 3 - 

usando o evento (change) da API do checkbox

17. Event binding com parâmetros

Basicamente pegar a API dos componentes, ver quais os eventos de output eles emitem, criar as variáveis que receberão esses outputs, passar essas variáveis como parâmetros para as funções/métodos.


-------------------------------
EVENT BINDING - Seção 3 - 

18. Event binding com property binding

Na parte 1 fazemos atualização via função.
Na parte 2 fazemos atualização via criação da variável inputName (atrelada ao .ts)em event-bind.component.html diretamente nos atributos nativos do componente.










